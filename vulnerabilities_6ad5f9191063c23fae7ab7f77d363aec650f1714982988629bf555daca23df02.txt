Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/docker-compose.yml
Path: docker-compose.yml
Vulnerability: Hardcoded Secrets
Code line: None
Relevant code:
test: wget --post-data 'identity=admin@admin.com&password=administrator' --no-verbose --tries=1 --spider http://localhost:8090/api/admins/auth-with-password || exit 1
Description: Credentials or secrets in code; Check source code for hardcoded passwords, API keys, etc.
Severity: High
Fix: Replace hardcoded credentials with environment variables or secure secrets management system.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/docker-compose.yml
Path: docker-compose.yml
Vulnerability: Security Misconfiguration
Code line: None
Relevant code:
- 1984:80
Description: Default, incomplete, or ad-hoc configurations; Check for unnecessary services, default credentials, etc.
Severity: Medium
Fix: Change the exposed port to a non-standard port to reduce the risk of automated attacks.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/docker-compose.yml
Path: docker-compose.yml
Vulnerability: Insecure Data Storage
Code line: None
Relevant code:
- ./data:/data
Description: Inadequate protection of stored data; Check for proper encryption and access controls on stored data.
Severity: High
Fix: Ensure data is stored securely with proper access controls and encryption.Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/docker-compose.yml
Path: docker-compose.yml
Vulnerability: Hardcoded Secrets
Code line: None
Relevant code:
test: wget --post-data 'identity=admin@admin.com&password=administrator' --no-verbose --tries=1 --spider http://localhost:8090/api/admins/auth-with-password || exit 1
Description: Credentials or secrets in code; Check source code for hardcoded passwords, API keys, etc.
Severity: High
Fix: Replace hardcoded credentials with environment variables or secure secrets management system.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/docker-compose.yml
Path: docker-compose.yml
Vulnerability: Security Misconfiguration
Code line: None
Relevant code:
- 1984:80
Description: Default, incomplete, or ad-hoc configurations; Check for unnecessary services, default credentials, etc.
Severity: Medium
Fix: Change the exposed port to a non-standard port to reduce the risk of automated attacks.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/docker-compose.yml
Path: docker-compose.yml
Vulnerability: Insecure Data Storage
Code line: None
Relevant code:
- ./data:/data
Description: Inadequate protection of stored data; Check for proper encryption and access controls on stored data.
Severity: High
Fix: Ensure data is stored securely with proper access controls and encryption.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/jsconfig.json
Path: web/jsconfig.json
Vulnerability: Security Misconfiguration
Code line: None
Relevant code:
"extends": "./.svelte-kit/tsconfig.json",
Description: The project is extending a configuration from an external file. If this file is compromised, it could lead to security issues.
Severity: Medium
Fix: Ensure the external configuration file is secure and its access is limited to authorized personnel only.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/jsconfig.json
Path: web/jsconfig.json
Vulnerability: Security Misconfiguration
Code line: None
Relevant code:
"allowJs": true,
Description: The configuration allows JavaScript files to be included. This could potentially lead to Cross-Site Scripting (XSS) attacks if not properly sanitized.
Severity: High
Fix: Ensure all JavaScript files are properly sanitized and validated before being included.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/jsconfig.json
Path: web/jsconfig.json
Vulnerability: Security Misconfiguration
Code line: None
Relevant code:
"checkJs": true,
Description: The configuration checks JavaScript files for errors. If not properly implemented, this could potentially expose sensitive information through error messages.
Severity: Medium
Fix: Ensure error messages do not expose sensitive information and are properly handled.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/jsconfig.json
Path: web/jsconfig.json
Vulnerability: Information Leakage
Code line: None
Relevant code:
"sourceMap": true,
Description: The configuration generates source maps. This could potentially expose sensitive source code information.
Severity: High
Fix: Disable source map generation for production environments.Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/docker-compose.yml
Path: docker-compose.yml
Vulnerability: Hardcoded Secrets
Code line: None
Relevant code:
test: wget --post-data 'identity=admin@admin.com&password=administrator' --no-verbose --tries=1 --spider http://localhost:8090/api/admins/auth-with-password || exit 1
Description: Credentials or secrets in code; Check source code for hardcoded passwords, API keys, etc.
Severity: High
Fix: Replace hardcoded credentials with environment variables or secure secrets management system.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/docker-compose.yml
Path: docker-compose.yml
Vulnerability: Security Misconfiguration
Code line: None
Relevant code:
- 1984:80
Description: Default, incomplete, or ad-hoc configurations; Check for unnecessary services, default credentials, etc.
Severity: Medium
Fix: Change the exposed port to a non-standard port to reduce the risk of automated attacks.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/docker-compose.yml
Path: docker-compose.yml
Vulnerability: Insecure Data Storage
Code line: None
Relevant code:
- ./data:/data
Description: Inadequate protection of stored data; Check for proper encryption and access controls on stored data.
Severity: High
Fix: Ensure data is stored securely with proper access controls and encryption.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/jsconfig.json
Path: web/jsconfig.json
Vulnerability: Security Misconfiguration
Code line: None
Relevant code:
"extends": "./.svelte-kit/tsconfig.json",
Description: The project is extending a configuration from an external file. If this file is compromised, it could lead to security issues.
Severity: Medium
Fix: Ensure the external configuration file is secure and its access is limited to authorized personnel only.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/jsconfig.json
Path: web/jsconfig.json
Vulnerability: Security Misconfiguration
Code line: None
Relevant code:
"allowJs": true,
Description: The configuration allows JavaScript files to be included. This could potentially lead to Cross-Site Scripting (XSS) attacks if not properly sanitized.
Severity: High
Fix: Ensure all JavaScript files are properly sanitized and validated before being included.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/jsconfig.json
Path: web/jsconfig.json
Vulnerability: Security Misconfiguration
Code line: None
Relevant code:
"checkJs": true,
Description: The configuration checks JavaScript files for errors. If not properly implemented, this could potentially expose sensitive information through error messages.
Severity: Medium
Fix: Ensure error messages do not expose sensitive information and are properly handled.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/jsconfig.json
Path: web/jsconfig.json
Vulnerability: Information Leakage
Code line: None
Relevant code:
"sourceMap": true,
Description: The configuration generates source maps. This could potentially expose sensitive source code information.
Severity: High
Fix: Disable source map generation for production environments.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/svelte.config.js
Path: web/svelte.config.js
Vulnerability: Cross-Site Request Forgery (CSRF)
Code line: None
Relevant code:
csrf: {

      checkOrigin: false

    }
Description: The application is vulnerable to Cross-Site Request Forgery (CSRF) attacks. The 'checkOrigin' property is set to false, which means the application does not verify if the request is coming from a trusted origin.
Severity: High
Fix: Change the 'checkOrigin' property to true. This will ensure that the application checks if the request is coming from a trusted origin, thus mitigating CSRF attacks.Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/docker-compose.yml
Path: docker-compose.yml
Vulnerability: Hardcoded Secrets
Code line: None
Relevant code:
test: wget --post-data 'identity=admin@admin.com&password=administrator' --no-verbose --tries=1 --spider http://localhost:8090/api/admins/auth-with-password || exit 1
Description: Credentials or secrets in code; Check source code for hardcoded passwords, API keys, etc.
Severity: High
Fix: Replace hardcoded credentials with environment variables or secure secrets management system.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/docker-compose.yml
Path: docker-compose.yml
Vulnerability: Security Misconfiguration
Code line: None
Relevant code:
- 1984:80
Description: Default, incomplete, or ad-hoc configurations; Check for unnecessary services, default credentials, etc.
Severity: Medium
Fix: Change the exposed port to a non-standard port to reduce the risk of automated attacks.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/docker-compose.yml
Path: docker-compose.yml
Vulnerability: Insecure Data Storage
Code line: None
Relevant code:
- ./data:/data
Description: Inadequate protection of stored data; Check for proper encryption and access controls on stored data.
Severity: High
Fix: Ensure data is stored securely with proper access controls and encryption.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/jsconfig.json
Path: web/jsconfig.json
Vulnerability: Security Misconfiguration
Code line: None
Relevant code:
"extends": "./.svelte-kit/tsconfig.json",
Description: The project is extending a configuration from an external file. If this file is compromised, it could lead to security issues.
Severity: Medium
Fix: Ensure the external configuration file is secure and its access is limited to authorized personnel only.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/jsconfig.json
Path: web/jsconfig.json
Vulnerability: Security Misconfiguration
Code line: None
Relevant code:
"allowJs": true,
Description: The configuration allows JavaScript files to be included. This could potentially lead to Cross-Site Scripting (XSS) attacks if not properly sanitized.
Severity: High
Fix: Ensure all JavaScript files are properly sanitized and validated before being included.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/jsconfig.json
Path: web/jsconfig.json
Vulnerability: Security Misconfiguration
Code line: None
Relevant code:
"checkJs": true,
Description: The configuration checks JavaScript files for errors. If not properly implemented, this could potentially expose sensitive information through error messages.
Severity: Medium
Fix: Ensure error messages do not expose sensitive information and are properly handled.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/jsconfig.json
Path: web/jsconfig.json
Vulnerability: Information Leakage
Code line: None
Relevant code:
"sourceMap": true,
Description: The configuration generates source maps. This could potentially expose sensitive source code information.
Severity: High
Fix: Disable source map generation for production environments.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/svelte.config.js
Path: web/svelte.config.js
Vulnerability: Cross-Site Request Forgery (CSRF)
Code line: None
Relevant code:
csrf: {

      checkOrigin: false

    }
Description: The application is vulnerable to Cross-Site Request Forgery (CSRF) attacks. The 'checkOrigin' property is set to false, which means the application does not verify if the request is coming from a trusted origin.
Severity: High
Fix: Change the 'checkOrigin' property to true. This will ensure that the application checks if the request is coming from a trusted origin, thus mitigating CSRF attacks.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/Dockerfile
Path: web/Dockerfile
Vulnerability: Hardcoded Secrets
Code line: None
Relevant code:
ENV NODE_ENV=production
Description: Sensitive information is hardcoded in the source code. This can lead to exposure of sensitive data if the source code is leaked or otherwise exposed.
Severity: High
Fix: Use environment variables to store sensitive information. Do not hardcode sensitive information in the source code.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/Dockerfile
Path: web/Dockerfile
Vulnerability: Security Misconfiguration
Code line: None
Relevant code:
RUN chown node:node /app
Description: The application is configured to run with unnecessary privileges. This can lead to unauthorized access or data exposure if the application is compromised.
Severity: Medium
Fix: Run the application with the least privileges necessary for its operation. Do not use root or other high-privilege accounts unless absolutely necessary.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/Dockerfile
Path: web/Dockerfile
Vulnerability: Insecure File Permissions
Code line: None
Relevant code:
COPY --from=builder --chown=node:node /app/build build/
Description: Files are copied with insecure permissions. This can lead to unauthorized access or data exposure.
Severity: Medium
Fix: Set file permissions to restrict access to only those users who need it. Do not use overly permissive file permissions.Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/docker-compose.yml
Path: docker-compose.yml
Vulnerability: Hardcoded Secrets
Code line: None
Relevant code:
test: wget --post-data 'identity=admin@admin.com&password=administrator' --no-verbose --tries=1 --spider http://localhost:8090/api/admins/auth-with-password || exit 1
Description: Credentials or secrets in code; Check source code for hardcoded passwords, API keys, etc.
Severity: High
Fix: Replace hardcoded credentials with environment variables or secure secrets management system.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/docker-compose.yml
Path: docker-compose.yml
Vulnerability: Security Misconfiguration
Code line: None
Relevant code:
- 1984:80
Description: Default, incomplete, or ad-hoc configurations; Check for unnecessary services, default credentials, etc.
Severity: Medium
Fix: Change the exposed port to a non-standard port to reduce the risk of automated attacks.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/docker-compose.yml
Path: docker-compose.yml
Vulnerability: Insecure Data Storage
Code line: None
Relevant code:
- ./data:/data
Description: Inadequate protection of stored data; Check for proper encryption and access controls on stored data.
Severity: High
Fix: Ensure data is stored securely with proper access controls and encryption.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/jsconfig.json
Path: web/jsconfig.json
Vulnerability: Security Misconfiguration
Code line: None
Relevant code:
"extends": "./.svelte-kit/tsconfig.json",
Description: The project is extending a configuration from an external file. If this file is compromised, it could lead to security issues.
Severity: Medium
Fix: Ensure the external configuration file is secure and its access is limited to authorized personnel only.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/jsconfig.json
Path: web/jsconfig.json
Vulnerability: Security Misconfiguration
Code line: None
Relevant code:
"allowJs": true,
Description: The configuration allows JavaScript files to be included. This could potentially lead to Cross-Site Scripting (XSS) attacks if not properly sanitized.
Severity: High
Fix: Ensure all JavaScript files are properly sanitized and validated before being included.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/jsconfig.json
Path: web/jsconfig.json
Vulnerability: Security Misconfiguration
Code line: None
Relevant code:
"checkJs": true,
Description: The configuration checks JavaScript files for errors. If not properly implemented, this could potentially expose sensitive information through error messages.
Severity: Medium
Fix: Ensure error messages do not expose sensitive information and are properly handled.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/jsconfig.json
Path: web/jsconfig.json
Vulnerability: Information Leakage
Code line: None
Relevant code:
"sourceMap": true,
Description: The configuration generates source maps. This could potentially expose sensitive source code information.
Severity: High
Fix: Disable source map generation for production environments.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/svelte.config.js
Path: web/svelte.config.js
Vulnerability: Cross-Site Request Forgery (CSRF)
Code line: None
Relevant code:
csrf: {

      checkOrigin: false

    }
Description: The application is vulnerable to Cross-Site Request Forgery (CSRF) attacks. The 'checkOrigin' property is set to false, which means the application does not verify if the request is coming from a trusted origin.
Severity: High
Fix: Change the 'checkOrigin' property to true. This will ensure that the application checks if the request is coming from a trusted origin, thus mitigating CSRF attacks.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/Dockerfile
Path: web/Dockerfile
Vulnerability: Hardcoded Secrets
Code line: None
Relevant code:
ENV NODE_ENV=production
Description: Sensitive information is hardcoded in the source code. This can lead to exposure of sensitive data if the source code is leaked or otherwise exposed.
Severity: High
Fix: Use environment variables to store sensitive information. Do not hardcode sensitive information in the source code.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/Dockerfile
Path: web/Dockerfile
Vulnerability: Security Misconfiguration
Code line: None
Relevant code:
RUN chown node:node /app
Description: The application is configured to run with unnecessary privileges. This can lead to unauthorized access or data exposure if the application is compromised.
Severity: Medium
Fix: Run the application with the least privileges necessary for its operation. Do not use root or other high-privilege accounts unless absolutely necessary.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/Dockerfile
Path: web/Dockerfile
Vulnerability: Insecure File Permissions
Code line: None
Relevant code:
COPY --from=builder --chown=node:node /app/build build/
Description: Files are copied with insecure permissions. This can lead to unauthorized access or data exposure.
Severity: Medium
Fix: Set file permissions to restrict access to only those users who need it. Do not use overly permissive file permissions.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/.eslintrc.cjs
Path: web/.eslintrc.cjs
Vulnerability: Security Misconfiguration
Code line: None
Relevant code:
module.exports = {

  root: true,

  extends: ['eslint:recommended', 'plugin:svelte/recommended', 'prettier'],

  parserOptions: {

    sourceType: 'module',

    ecmaVersion: 2020,

    extraFileExtensions: ['.svelte']

  },

  env: {

    browser: true,

    es2017: true,

    node: true

  }

};

Description: The configuration file is exposed which could lead to potential security risks. It is recommended to hide or secure configuration files to prevent unauthorized access.
Severity: Medium
Fix: Move the configuration file to a secure location and restrict its access. Use environment variables for sensitive data.Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/docker-compose.yml
Path: docker-compose.yml
Vulnerability: Hardcoded Secrets
Code line: None
Relevant code:
test: wget --post-data 'identity=admin@admin.com&password=administrator' --no-verbose --tries=1 --spider http://localhost:8090/api/admins/auth-with-password || exit 1
Description: Credentials or secrets in code; Check source code for hardcoded passwords, API keys, etc.
Severity: High
Fix: Replace hardcoded credentials with environment variables or secure secrets management system.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/docker-compose.yml
Path: docker-compose.yml
Vulnerability: Security Misconfiguration
Code line: None
Relevant code:
- 1984:80
Description: Default, incomplete, or ad-hoc configurations; Check for unnecessary services, default credentials, etc.
Severity: Medium
Fix: Change the exposed port to a non-standard port to reduce the risk of automated attacks.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/docker-compose.yml
Path: docker-compose.yml
Vulnerability: Insecure Data Storage
Code line: None
Relevant code:
- ./data:/data
Description: Inadequate protection of stored data; Check for proper encryption and access controls on stored data.
Severity: High
Fix: Ensure data is stored securely with proper access controls and encryption.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/jsconfig.json
Path: web/jsconfig.json
Vulnerability: Security Misconfiguration
Code line: None
Relevant code:
"extends": "./.svelte-kit/tsconfig.json",
Description: The project is extending a configuration from an external file. If this file is compromised, it could lead to security issues.
Severity: Medium
Fix: Ensure the external configuration file is secure and its access is limited to authorized personnel only.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/jsconfig.json
Path: web/jsconfig.json
Vulnerability: Security Misconfiguration
Code line: None
Relevant code:
"allowJs": true,
Description: The configuration allows JavaScript files to be included. This could potentially lead to Cross-Site Scripting (XSS) attacks if not properly sanitized.
Severity: High
Fix: Ensure all JavaScript files are properly sanitized and validated before being included.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/jsconfig.json
Path: web/jsconfig.json
Vulnerability: Security Misconfiguration
Code line: None
Relevant code:
"checkJs": true,
Description: The configuration checks JavaScript files for errors. If not properly implemented, this could potentially expose sensitive information through error messages.
Severity: Medium
Fix: Ensure error messages do not expose sensitive information and are properly handled.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/jsconfig.json
Path: web/jsconfig.json
Vulnerability: Information Leakage
Code line: None
Relevant code:
"sourceMap": true,
Description: The configuration generates source maps. This could potentially expose sensitive source code information.
Severity: High
Fix: Disable source map generation for production environments.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/svelte.config.js
Path: web/svelte.config.js
Vulnerability: Cross-Site Request Forgery (CSRF)
Code line: None
Relevant code:
csrf: {

      checkOrigin: false

    }
Description: The application is vulnerable to Cross-Site Request Forgery (CSRF) attacks. The 'checkOrigin' property is set to false, which means the application does not verify if the request is coming from a trusted origin.
Severity: High
Fix: Change the 'checkOrigin' property to true. This will ensure that the application checks if the request is coming from a trusted origin, thus mitigating CSRF attacks.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/Dockerfile
Path: web/Dockerfile
Vulnerability: Hardcoded Secrets
Code line: None
Relevant code:
ENV NODE_ENV=production
Description: Sensitive information is hardcoded in the source code. This can lead to exposure of sensitive data if the source code is leaked or otherwise exposed.
Severity: High
Fix: Use environment variables to store sensitive information. Do not hardcode sensitive information in the source code.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/Dockerfile
Path: web/Dockerfile
Vulnerability: Security Misconfiguration
Code line: None
Relevant code:
RUN chown node:node /app
Description: The application is configured to run with unnecessary privileges. This can lead to unauthorized access or data exposure if the application is compromised.
Severity: Medium
Fix: Run the application with the least privileges necessary for its operation. Do not use root or other high-privilege accounts unless absolutely necessary.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/Dockerfile
Path: web/Dockerfile
Vulnerability: Insecure File Permissions
Code line: None
Relevant code:
COPY --from=builder --chown=node:node /app/build build/
Description: Files are copied with insecure permissions. This can lead to unauthorized access or data exposure.
Severity: Medium
Fix: Set file permissions to restrict access to only those users who need it. Do not use overly permissive file permissions.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/.eslintrc.cjs
Path: web/.eslintrc.cjs
Vulnerability: Security Misconfiguration
Code line: None
Relevant code:
module.exports = {

  root: true,

  extends: ['eslint:recommended', 'plugin:svelte/recommended', 'prettier'],

  parserOptions: {

    sourceType: 'module',

    ecmaVersion: 2020,

    extraFileExtensions: ['.svelte']

  },

  env: {

    browser: true,

    es2017: true,

    node: true

  }

};

Description: The configuration file is exposed which could lead to potential security risks. It is recommended to hide or secure configuration files to prevent unauthorized access.
Severity: Medium
Fix: Move the configuration file to a secure location and restrict its access. Use environment variables for sensitive data.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/.npmrc
Path: web/.npmrc
Vulnerability: Security Misconfiguration
Code line: None
Relevant code:
engine-strict=true

resolution-mode=highest

Description: The .npmrc file is configured to use the highest available version of a package. This could lead to the use of unstable or insecure versions.
Severity: Medium
Fix: Change resolution-mode to 'lockfile' to ensure that only package versions specified in the lockfile are used.Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/docker-compose.yml
Path: docker-compose.yml
Vulnerability: Hardcoded Secrets
Code line: None
Relevant code:
test: wget --post-data 'identity=admin@admin.com&password=administrator' --no-verbose --tries=1 --spider http://localhost:8090/api/admins/auth-with-password || exit 1
Description: Credentials or secrets in code; Check source code for hardcoded passwords, API keys, etc.
Severity: High
Fix: Replace hardcoded credentials with environment variables or secure secrets management system.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/docker-compose.yml
Path: docker-compose.yml
Vulnerability: Security Misconfiguration
Code line: None
Relevant code:
- 1984:80
Description: Default, incomplete, or ad-hoc configurations; Check for unnecessary services, default credentials, etc.
Severity: Medium
Fix: Change the exposed port to a non-standard port to reduce the risk of automated attacks.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/docker-compose.yml
Path: docker-compose.yml
Vulnerability: Insecure Data Storage
Code line: None
Relevant code:
- ./data:/data
Description: Inadequate protection of stored data; Check for proper encryption and access controls on stored data.
Severity: High
Fix: Ensure data is stored securely with proper access controls and encryption.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/jsconfig.json
Path: web/jsconfig.json
Vulnerability: Security Misconfiguration
Code line: None
Relevant code:
"extends": "./.svelte-kit/tsconfig.json",
Description: The project is extending a configuration from an external file. If this file is compromised, it could lead to security issues.
Severity: Medium
Fix: Ensure the external configuration file is secure and its access is limited to authorized personnel only.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/jsconfig.json
Path: web/jsconfig.json
Vulnerability: Security Misconfiguration
Code line: None
Relevant code:
"allowJs": true,
Description: The configuration allows JavaScript files to be included. This could potentially lead to Cross-Site Scripting (XSS) attacks if not properly sanitized.
Severity: High
Fix: Ensure all JavaScript files are properly sanitized and validated before being included.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/jsconfig.json
Path: web/jsconfig.json
Vulnerability: Security Misconfiguration
Code line: None
Relevant code:
"checkJs": true,
Description: The configuration checks JavaScript files for errors. If not properly implemented, this could potentially expose sensitive information through error messages.
Severity: Medium
Fix: Ensure error messages do not expose sensitive information and are properly handled.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/jsconfig.json
Path: web/jsconfig.json
Vulnerability: Information Leakage
Code line: None
Relevant code:
"sourceMap": true,
Description: The configuration generates source maps. This could potentially expose sensitive source code information.
Severity: High
Fix: Disable source map generation for production environments.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/svelte.config.js
Path: web/svelte.config.js
Vulnerability: Cross-Site Request Forgery (CSRF)
Code line: None
Relevant code:
csrf: {

      checkOrigin: false

    }
Description: The application is vulnerable to Cross-Site Request Forgery (CSRF) attacks. The 'checkOrigin' property is set to false, which means the application does not verify if the request is coming from a trusted origin.
Severity: High
Fix: Change the 'checkOrigin' property to true. This will ensure that the application checks if the request is coming from a trusted origin, thus mitigating CSRF attacks.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/Dockerfile
Path: web/Dockerfile
Vulnerability: Hardcoded Secrets
Code line: None
Relevant code:
ENV NODE_ENV=production
Description: Sensitive information is hardcoded in the source code. This can lead to exposure of sensitive data if the source code is leaked or otherwise exposed.
Severity: High
Fix: Use environment variables to store sensitive information. Do not hardcode sensitive information in the source code.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/Dockerfile
Path: web/Dockerfile
Vulnerability: Security Misconfiguration
Code line: None
Relevant code:
RUN chown node:node /app
Description: The application is configured to run with unnecessary privileges. This can lead to unauthorized access or data exposure if the application is compromised.
Severity: Medium
Fix: Run the application with the least privileges necessary for its operation. Do not use root or other high-privilege accounts unless absolutely necessary.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/Dockerfile
Path: web/Dockerfile
Vulnerability: Insecure File Permissions
Code line: None
Relevant code:
COPY --from=builder --chown=node:node /app/build build/
Description: Files are copied with insecure permissions. This can lead to unauthorized access or data exposure.
Severity: Medium
Fix: Set file permissions to restrict access to only those users who need it. Do not use overly permissive file permissions.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/.eslintrc.cjs
Path: web/.eslintrc.cjs
Vulnerability: Security Misconfiguration
Code line: None
Relevant code:
module.exports = {

  root: true,

  extends: ['eslint:recommended', 'plugin:svelte/recommended', 'prettier'],

  parserOptions: {

    sourceType: 'module',

    ecmaVersion: 2020,

    extraFileExtensions: ['.svelte']

  },

  env: {

    browser: true,

    es2017: true,

    node: true

  }

};

Description: The configuration file is exposed which could lead to potential security risks. It is recommended to hide or secure configuration files to prevent unauthorized access.
Severity: Medium
Fix: Move the configuration file to a secure location and restrict its access. Use environment variables for sensitive data.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/.npmrc
Path: web/.npmrc
Vulnerability: Security Misconfiguration
Code line: None
Relevant code:
engine-strict=true

resolution-mode=highest

Description: The .npmrc file is configured to use the highest available version of a package. This could lead to the use of unstable or insecure versions.
Severity: Medium
Fix: Change resolution-mode to 'lockfile' to ensure that only package versions specified in the lockfile are used.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/vite.config.js
Path: web/vite.config.js
Vulnerability: Using Components with Known Vulnerabilities
Code line: None
Relevant code:
import { sveltekit } from '@sveltejs/kit/vite';

import { defineConfig } from 'vite';



export default defineConfig({

  plugins: [sveltekit()]

});

Description: The project is using third-party libraries. If these libraries are outdated, they may contain known vulnerabilities that can be exploited.
Severity: Medium
Fix: Regularly update all third-party libraries to their latest versions to ensure that all known vulnerabilities are patched.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/vite.config.js
Path: web/vite.config.js
Vulnerability: Security Misconfiguration
Code line: None
Relevant code:
import { sveltekit } from '@sveltejs/kit/vite';

import { defineConfig } from 'vite';



export default defineConfig({

  plugins: [sveltekit()]

});

Description: The configuration file is exposed which could lead to potential security risks.
Severity: High
Fix: Ensure that configuration files are not exposed and are properly secured. Use environment variables for sensitive data.Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/docker-compose.yml
Path: docker-compose.yml
Vulnerability: Hardcoded Secrets
Code line: None
Relevant code:
test: wget --post-data 'identity=admin@admin.com&password=administrator' --no-verbose --tries=1 --spider http://localhost:8090/api/admins/auth-with-password || exit 1
Description: Credentials or secrets in code; Check source code for hardcoded passwords, API keys, etc.
Severity: High
Fix: Replace hardcoded credentials with environment variables or secure secrets management system.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/docker-compose.yml
Path: docker-compose.yml
Vulnerability: Security Misconfiguration
Code line: None
Relevant code:
- 1984:80
Description: Default, incomplete, or ad-hoc configurations; Check for unnecessary services, default credentials, etc.
Severity: Medium
Fix: Change the exposed port to a non-standard port to reduce the risk of automated attacks.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/docker-compose.yml
Path: docker-compose.yml
Vulnerability: Insecure Data Storage
Code line: None
Relevant code:
- ./data:/data
Description: Inadequate protection of stored data; Check for proper encryption and access controls on stored data.
Severity: High
Fix: Ensure data is stored securely with proper access controls and encryption.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/jsconfig.json
Path: web/jsconfig.json
Vulnerability: Security Misconfiguration
Code line: None
Relevant code:
"extends": "./.svelte-kit/tsconfig.json",
Description: The project is extending a configuration from an external file. If this file is compromised, it could lead to security issues.
Severity: Medium
Fix: Ensure the external configuration file is secure and its access is limited to authorized personnel only.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/jsconfig.json
Path: web/jsconfig.json
Vulnerability: Security Misconfiguration
Code line: None
Relevant code:
"allowJs": true,
Description: The configuration allows JavaScript files to be included. This could potentially lead to Cross-Site Scripting (XSS) attacks if not properly sanitized.
Severity: High
Fix: Ensure all JavaScript files are properly sanitized and validated before being included.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/jsconfig.json
Path: web/jsconfig.json
Vulnerability: Security Misconfiguration
Code line: None
Relevant code:
"checkJs": true,
Description: The configuration checks JavaScript files for errors. If not properly implemented, this could potentially expose sensitive information through error messages.
Severity: Medium
Fix: Ensure error messages do not expose sensitive information and are properly handled.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/jsconfig.json
Path: web/jsconfig.json
Vulnerability: Information Leakage
Code line: None
Relevant code:
"sourceMap": true,
Description: The configuration generates source maps. This could potentially expose sensitive source code information.
Severity: High
Fix: Disable source map generation for production environments.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/svelte.config.js
Path: web/svelte.config.js
Vulnerability: Cross-Site Request Forgery (CSRF)
Code line: None
Relevant code:
csrf: {

      checkOrigin: false

    }
Description: The application is vulnerable to Cross-Site Request Forgery (CSRF) attacks. The 'checkOrigin' property is set to false, which means the application does not verify if the request is coming from a trusted origin.
Severity: High
Fix: Change the 'checkOrigin' property to true. This will ensure that the application checks if the request is coming from a trusted origin, thus mitigating CSRF attacks.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/Dockerfile
Path: web/Dockerfile
Vulnerability: Hardcoded Secrets
Code line: None
Relevant code:
ENV NODE_ENV=production
Description: Sensitive information is hardcoded in the source code. This can lead to exposure of sensitive data if the source code is leaked or otherwise exposed.
Severity: High
Fix: Use environment variables to store sensitive information. Do not hardcode sensitive information in the source code.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/Dockerfile
Path: web/Dockerfile
Vulnerability: Security Misconfiguration
Code line: None
Relevant code:
RUN chown node:node /app
Description: The application is configured to run with unnecessary privileges. This can lead to unauthorized access or data exposure if the application is compromised.
Severity: Medium
Fix: Run the application with the least privileges necessary for its operation. Do not use root or other high-privilege accounts unless absolutely necessary.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/Dockerfile
Path: web/Dockerfile
Vulnerability: Insecure File Permissions
Code line: None
Relevant code:
COPY --from=builder --chown=node:node /app/build build/
Description: Files are copied with insecure permissions. This can lead to unauthorized access or data exposure.
Severity: Medium
Fix: Set file permissions to restrict access to only those users who need it. Do not use overly permissive file permissions.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/.eslintrc.cjs
Path: web/.eslintrc.cjs
Vulnerability: Security Misconfiguration
Code line: None
Relevant code:
module.exports = {

  root: true,

  extends: ['eslint:recommended', 'plugin:svelte/recommended', 'prettier'],

  parserOptions: {

    sourceType: 'module',

    ecmaVersion: 2020,

    extraFileExtensions: ['.svelte']

  },

  env: {

    browser: true,

    es2017: true,

    node: true

  }

};

Description: The configuration file is exposed which could lead to potential security risks. It is recommended to hide or secure configuration files to prevent unauthorized access.
Severity: Medium
Fix: Move the configuration file to a secure location and restrict its access. Use environment variables for sensitive data.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/.npmrc
Path: web/.npmrc
Vulnerability: Security Misconfiguration
Code line: None
Relevant code:
engine-strict=true

resolution-mode=highest

Description: The .npmrc file is configured to use the highest available version of a package. This could lead to the use of unstable or insecure versions.
Severity: Medium
Fix: Change resolution-mode to 'lockfile' to ensure that only package versions specified in the lockfile are used.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/vite.config.js
Path: web/vite.config.js
Vulnerability: Using Components with Known Vulnerabilities
Code line: None
Relevant code:
import { sveltekit } from '@sveltejs/kit/vite';

import { defineConfig } from 'vite';



export default defineConfig({

  plugins: [sveltekit()]

});

Description: The project is using third-party libraries. If these libraries are outdated, they may contain known vulnerabilities that can be exploited.
Severity: Medium
Fix: Regularly update all third-party libraries to their latest versions to ensure that all known vulnerabilities are patched.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/vite.config.js
Path: web/vite.config.js
Vulnerability: Security Misconfiguration
Code line: None
Relevant code:
import { sveltekit } from '@sveltejs/kit/vite';

import { defineConfig } from 'vite';



export default defineConfig({

  plugins: [sveltekit()]

});

Description: The configuration file is exposed which could lead to potential security risks.
Severity: High
Fix: Ensure that configuration files are not exposed and are properly secured. Use environment variables for sensitive data.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/.prettierignore
Path: web/.prettierignore
Vulnerability: Sensitive Data Exposure
Code line: None
Relevant code:
.env

.env.*

!.env.example
Description: The .env files are included in the .prettierignore file. This could lead to exposure of sensitive information if these files contain secrets such as API keys, database credentials, etc.
Severity: High
Fix: Remove .env, .env.* and !.env.example from the .prettierignore file. Make sure to not include any sensitive information in the codebase. Use environment variables to store sensitive information.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/.prettierignore
Path: web/.prettierignore
Vulnerability: Security Misconfiguration
Code line: None
Relevant code:
.DS_Store

node_modules

/build

/.svelte-kit

/package
Description: The .DS_Store, node_modules, /build, /.svelte-kit and /package directories are included in the .prettierignore file. This could lead to security misconfigurations if these directories contain configuration files or dependencies with known vulnerabilities.
Severity: Medium
Fix: Remove .DS_Store, node_modules, /build, /.svelte-kit and /package from the .prettierignore file. Regularly update dependencies to avoid using components with known vulnerabilities.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/.prettierignore
Path: web/.prettierignore
Vulnerability: Using Components with Known Vulnerabilities
Code line: None
Relevant code:
pnpm-lock.yaml

package-lock.json

yarn.lock
Description: The pnpm-lock.yaml, package-lock.json and yarn.lock files are included in the .prettierignore file. These files lock the versions of dependencies, which could lead to using outdated libraries with known vulnerabilities.
Severity: Medium
Fix: Remove pnpm-lock.yaml, package-lock.json and yarn.lock from the .prettierignore file. Regularly update dependencies to avoid using components with known vulnerabilities.