Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/docker-compose.yml
Path: docker-compose.yml
Vulnerability: Hardcoded Secrets
Code line: None
Relevant code:
test: wget --post-data 'identity=admin@admin.com&password=administrator' --no-verbose --tries=1 --spider http://localhost:8090/api/admins/auth-with-password || exit 1
Description: Credentials or secrets in code; Check source code for hardcoded passwords, API keys, etc.
Severity: High
Fix: Replace hardcoded credentials with environment variables or secure secrets management system.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/docker-compose.yml
Path: docker-compose.yml
Vulnerability: Security Misconfiguration
Code line: None
Relevant code:
ports:

      - 1984:80
Description: Default, incomplete, or ad-hoc configurations; Check for unnecessary services, default credentials, etc.
Severity: Medium
Fix: Change the port to a non-default value and ensure it is not publicly accessible if not necessary.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/docker-compose.yml
Path: docker-compose.yml
Vulnerability: Using Components with Known Vulnerabilities
Code line: None
Relevant code:
image: nginx:stable-alpine3.17-slim
Description: Using outdated libraries; Check versions of third-party components and libraries.
Severity: Medium
Fix: Regularly update the nginx image to the latest stable version.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/docker-compose.yml
Path: docker-compose.yml
Vulnerability: Insecure Data Storage
Code line: None
Relevant code:
- ./data:/data
Description: Inadequate protection of stored data; Check for proper encryption and access controls on stored data.
Severity: High
Fix: Ensure data is encrypted at rest and proper access controls are in place.Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/jsconfig.json
Path: web/jsconfig.json
Vulnerability: Security Misconfiguration
Code line: None
Relevant code:
"extends": "./.svelte-kit/tsconfig.json",
Description: The project is extending a configuration from an external file. If this file is compromised, it could lead to security issues.
Severity: Medium
Fix: Ensure the external configuration file is secure and its access is limited to authorized personnel only.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/jsconfig.json
Path: web/jsconfig.json
Vulnerability: Security Misconfiguration
Code line: None
Relevant code:
"allowJs": true,
Description: The configuration allows JavaScript files to be included. This could potentially lead to Cross-Site Scripting (XSS) attacks if not properly handled.
Severity: High
Fix: Ensure all JavaScript files are properly sanitized and validated before being included.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/jsconfig.json
Path: web/jsconfig.json
Vulnerability: Security Misconfiguration
Code line: None
Relevant code:
"checkJs": true,
Description: The configuration checks JavaScript files. If the checking mechanism is flawed, it could lead to security vulnerabilities.
Severity: Medium
Fix: Ensure the mechanism used to check JavaScript files is secure and robust.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/jsconfig.json
Path: web/jsconfig.json
Vulnerability: Security Misconfiguration
Code line: None
Relevant code:
"resolveJsonModule": true,
Description: The configuration resolves JSON modules. If the resolution process is not secure, it could lead to security vulnerabilities.
Severity: Medium
Fix: Ensure the process used to resolve JSON modules is secure and robust.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/jsconfig.json
Path: web/jsconfig.json
Vulnerability: Using Components with Known Vulnerabilities
Code line: None
Relevant code:
"skipLibCheck": true,
Description: The configuration skips library checks. This could potentially lead to the use of outdated or vulnerable libraries.
Severity: High
Fix: Do not skip library checks. Ensure all libraries used are up-to-date and free from known vulnerabilities.Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/svelte.config.js
Path: web/svelte.config.js
Vulnerability: Cross-Site Request Forgery (CSRF)
Code line: None
Relevant code:
csrf: {

      checkOrigin: false

    }
Description: The application's CSRF protection is misconfigured. The 'checkOrigin' option is set to false, which means the application does not verify that the request originated from the same site.
Severity: High
Fix: Change the 'checkOrigin' option to true to enable origin checking.Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/Dockerfile
Path: web/Dockerfile
Vulnerability: Hardcoded Secrets
Code line: None
Relevant code:
ENV NODE_ENV=production
Description: Sensitive information is hardcoded in the source code. This can lead to exposure of sensitive data if the source code is leaked or otherwise exposed.
Severity: High
Fix: Use environment variables to store sensitive information. Do not hardcode sensitive information in the source code.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/Dockerfile
Path: web/Dockerfile
Vulnerability: Security Misconfiguration
Code line: None
Relevant code:
USER root
Description: The application is configured to run with root privileges. This can lead to a complete system compromise if an attacker is able to exploit a vulnerability in the application.
Severity: Critical
Fix: Run the application with the least privileges necessary. Do not run the application as root.

Direct code link: /Users/dmitry/projects/ctf-training/amogus_plus_plus/web/Dockerfile
Path: web/Dockerfile
Vulnerability: Insecure File Permissions
Code line: None
Relevant code:
COPY --from=builder --chown=node:node /app/build build/
Description: The application files are owned by the node user. This can lead to unauthorized access or modification of the application files if the node user is compromised.
Severity: Medium
Fix: Set appropriate file permissions and ownership. Do not allow non-root users to own or write to application files.